package com.mkrawetko;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.params.provider.Arguments.of;

/**
 * https://leetcode.com/problems/find-the-difference/
 * Easy
 * <p>
 * You are given two strings s and t.
 * <p>
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * <p>
 * Return the letter that was added to t.
 * <p>
 * Example 1:
 * <p>
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 * Example 2:
 * <p>
 * Input: s = "", t = "y"
 * Output: "y"
 * Example 3:
 * <p>
 * Input: s = "a", t = "aa"
 * Output: "a"
 * Example 4:
 * <p>
 * Input: s = "ae", t = "aea"
 * Output: "a"
 * <p>
 * Constraints:
 * <p>
 * 0 <= s.length <= 1000
 * t.length == s.length + 1
 * s and t consist of lower-case English letters.
 */
public class FindTheDifferenceTest {

    private final FindTheDifference underTest = new FindTheDifference();

    public static Stream<Arguments> data() {
        return Stream.of(of("abcd", "abcde", 'e'), of("abdc", "abcde", 'e'), of("dbac", "aebdc", 'e'), of("", "y", 'y'), of("a", "aa", 'a'), of("ae", "aea", 'a'));
    }

    @ParameterizedTest
    @MethodSource("data")
    public void shouldFindTheDifference_sorting(String s, String t, char expected) {
        char actual = underTest.findTheDifference_sorting(s, t);

        assertEquals(expected, actual);
    }

    @ParameterizedTest
    @MethodSource("data")
    public void shouldFindTheDifference_counting(String s, String t, char expected) {
        char actual = underTest.findTheDifference_counting(s, t);

        assertEquals(expected, actual);
    }
}